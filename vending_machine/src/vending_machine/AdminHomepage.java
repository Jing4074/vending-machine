package vending_machine;

import java.awt.Font;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;


public class AdminHomepage extends javax.swing.JFrame {
    
    String filePath = "src\\vending_machine\\Drinks.txt";
    String fileOrder = "src\\vending_machine\\orders.txt";
    int ln;
    String Username,Password;
    List<String> drinksData = new ArrayList<>();
    Map<String, Integer> paymentMethodCount = new HashMap<>();
    
    private String loggedInUsername;

    public AdminHomepage(String username) {
        loggedInUsername = username;
    }
    
    public AdminHomepage() {
        initComponents();
    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        edit_profile_button = new javax.swing.JButton();
        modify_drinks_button = new javax.swing.JButton();
        view_drinks_button = new javax.swing.JButton();
        view_order_button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        report_combobox = new javax.swing.JComboBox<>();
        report_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("STAFF PAGE");

        edit_profile_button.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        edit_profile_button.setText("Edit Profile");
        edit_profile_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_profile_buttonActionPerformed(evt);
            }
        });

        modify_drinks_button.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        modify_drinks_button.setText("Modify Drinks");
        modify_drinks_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modify_drinks_buttonActionPerformed(evt);
            }
        });

        view_drinks_button.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        view_drinks_button.setText("View All Drinks");
        view_drinks_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_drinks_buttonActionPerformed(evt);
            }
        });

        view_order_button.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        view_order_button.setText("View All Orders");
        view_order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_order_buttonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Report:");

        report_combobox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        report_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 Most Popular Drinks", "Low Quantity Drinks", "Most Popular Payment Method" }));
        report_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                report_comboboxActionPerformed(evt);
            }
        });

        report_button.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        report_button.setText("Generate Report");
        report_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                report_buttonActionPerformed(evt);
            }
        });

        exit_button.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        exit_button.setText("Logout");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(report_button)
                .addGap(53, 53, 53))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(25, 25, 25)
                        .addComponent(report_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(edit_profile_button)
                        .addGap(72, 72, 72)
                        .addComponent(exit_button)
                        .addGap(71, 71, 71))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(modify_drinks_button)
                        .addGap(36, 36, 36)
                        .addComponent(view_drinks_button)
                        .addGap(36, 36, 36)
                        .addComponent(view_order_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modify_drinks_button)
                    .addComponent(view_drinks_button)
                    .addComponent(view_order_button))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(report_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(report_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_profile_button)
                    .addComponent(exit_button))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        // exit staff homepage
        setVisible(false);
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void modify_drinks_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modify_drinks_buttonActionPerformed
        //modify drinks page 
       ModifyDrinks modifyDrinks = new ModifyDrinks();
       modifyDrinks.setVisible(true);
    }//GEN-LAST:event_modify_drinks_buttonActionPerformed

    private void edit_profile_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_profile_buttonActionPerformed
        EditAdmin editAdminForm = new EditAdmin();
        editAdminForm.setVisible(true);
    }//GEN-LAST:event_edit_profile_buttonActionPerformed

    private void view_drinks_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_drinks_buttonActionPerformed
        // View All Drinks data
                
        try {
            BufferedReader reader = new BufferedReader(new FileReader(filePath));
            String line;
            while ((line = reader.readLine()) != null) {
                drinksData.add(line);
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        JTextArea textArea = new JTextArea();
        Font font = new Font("Arial", Font.PLAIN, 20); // Adjust the font size
        textArea.setFont(font); // Set the font
        for (String drinkData : drinksData) {
            String[] parts = drinkData.split(",");
            String drinkName = parts[0];
            String drinkPrice = parts[1];
            String drinkQuantity = parts[2];
            textArea.append("Drink Name: " + drinkName + "\n");
            textArea.append("Drink Price: RM " + drinkPrice + "\n");
            textArea.append("Drink In Stock Quantity: " + drinkQuantity + "\n");
            textArea.append("=============================\n");
        }

        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

        JFrame frame = new JFrame("All Drinks Data");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only this window
        frame.add(scrollPane);
        frame.pack();
        frame.setVisible(true);
     
    }//GEN-LAST:event_view_drinks_buttonActionPerformed

    private void report_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_report_buttonActionPerformed
        // generate report
        String selectedOption = (String) report_combobox.getSelectedItem();
        
        int max1 = Integer.MIN_VALUE;
        int max2 = Integer.MIN_VALUE;
        int max3 = Integer.MIN_VALUE;
        String drink1 = null;
        String drink2 = null;
        String drink3 = null;
        JTextArea textArea = new JTextArea();
        Font font = new Font("Arial", Font.PLAIN, 20); // Adjust the font size
        textArea.setFont(font); // Set the font
        
        //3 Most Popular Drinks report
        if (selectedOption.equals("3 Most Popular Drinks")) {
            try {
                BufferedReader reader = new BufferedReader(new FileReader(filePath));
                String line;
                while ((line = reader.readLine()) != null) {
                    drinksData.add(line);
                }
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

            for (String drinkData : drinksData) {
                String[] parts = drinkData.split(",");
                String drinkName = parts[0];
                int drinkSales = Integer.parseInt(parts[3]);

                if (drinkSales > max1)
                {
                    max3 = max2; max2 = max1; max1 = drinkSales;
                    drink3 = drink2 ; drink2 = drink1; drink1 = drinkName;
                }
                else if (drinkSales > max2)
                {
                    max3 = max2; max2 = drinkSales;
                    drink3 = drink2; drink2 = drinkName;
                }
                else if (drinkSales > max3)
                {
                    max3 = drinkSales;
                    drink3 = drinkName;
                }
            }                   
                textArea.append("3 Most Popular Drinks:\n");
                textArea.append("=============================\n");
                textArea.append("Top Sales of Drink: " + drink1 + "\nSales: "+ max1 +"\n\n");
                textArea.append("Second Top Sales of Drink: " + drink2 + "\nSales: "+ max2+ "\n\n");
                textArea.append("Third Top Sales of Drink: " + drink3 + "\nSales: "+ max3 + "\n\n");
                textArea.append("=============================\n");


            JScrollPane scrollPane = new JScrollPane(textArea);
            scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
            scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

            JFrame frame = new JFrame("3 Most Popular Drinks");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only this window
            frame.add(scrollPane);
            frame.pack();
            frame.setVisible(true);
        }
        //Low Quantity Report
        else if(selectedOption.equals("Low Quantity Drinks")){
            try {
                //read from Drinks.txt
                BufferedReader reader = new BufferedReader(new FileReader(filePath));
                String line;

                while ((line = reader.readLine()) != null) {
                    String[] parts = line.split(",");
                    if (parts.length >= 3) {
                        int quantity = Integer.parseInt(parts[2].trim()); // Parse the third element as an integer
                        String drinkName = parts[0];
                        if (quantity < 5) {
                            // Append data to the text area
                            textArea.append("Low Quantity Drinks (Quantity Less than 5):\n");
                            textArea.append("Drink: " + drinkName + "\nQuantity: "+ quantity +"\n");
                            textArea.append("=============================\n");
                        }
                    }
                }
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

            if (textArea.getText().isEmpty()) {
                // No low quantity drinks found
                textArea.setText("No Low Quantity Drinks Found");
            }

            JScrollPane scrollPane = new JScrollPane(textArea);
            scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
            scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

            JFrame frame = new JFrame("Low Quantity Drinks");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only this window
            frame.add(scrollPane);
            frame.pack();
            frame.setVisible(true);
        }else if(selectedOption.equals("Most Popular Payment Method")){

            //read from orders.txt
            try{
                BufferedReader reader = new BufferedReader(new FileReader(fileOrder));
                String line;
                while ((line = reader.readLine()) != null) {
                    String[] parts = line.split(",");
                    if (parts.length >= 5) {
                        String paymentMethod = parts[4].trim();
                        paymentMethodCount.put(paymentMethod, paymentMethodCount.getOrDefault(paymentMethod, 0) + 1);
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            String mostPopularPaymentMethod = null;
            int maxCount = 0;
            for (Map.Entry<String, Integer> entry : paymentMethodCount.entrySet()) {
                if (entry.getValue() > maxCount) {
                    maxCount = entry.getValue();
                    mostPopularPaymentMethod = entry.getKey();
                }
            }
            JFrame frame = new JFrame("Most Popular Payment Method");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

            // Create JTextArea to display the result

            textArea.setEditable(false);
            textArea.append("Most Popular Payment Method: " + mostPopularPaymentMethod + "\nAmount of Times Paid By Customers: " + maxCount + "\n");

            // Create JScrollPane for the JTextArea
            JScrollPane scrollPane = new JScrollPane(textArea);
            frame.add(scrollPane);

            // Pack and display the frame
            frame.pack();
            frame.setLocationRelativeTo(null); // Center the frame on the screen
            frame.setVisible(true);
        }     
    }//GEN-LAST:event_report_buttonActionPerformed

    private void view_order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_order_buttonActionPerformed
        // create a text area to display all orders
        JTextArea orderTextArea = new JTextArea(20, 50); // Create a JTextArea
    
        try {
            BufferedReader br = new BufferedReader(new FileReader(fileOrder));
            String line;

            while ((line = br.readLine()) != null) {
                String[] orderDetails = line.split(",");
                if (orderDetails.length == 8) {
                    String date = orderDetails[0];
                    String time = orderDetails[1];
                    String drinkName = orderDetails[2];
                    String quantity = orderDetails[3];
                    String paymentMethod = orderDetails[4];
                    String amount_insert = orderDetails[5];
                    String change = orderDetails[6];
                    String total_amount = orderDetails[7];

                    // Append the order details to the JTextArea
                    orderTextArea.append("Date: " + date + "\n");
                    orderTextArea.append("Time: " + time + "\n");
                    orderTextArea.append("Drink: " + drinkName + "\n");
                    orderTextArea.append("Quantity Purchased: " + quantity + "\n");
                    orderTextArea.append("Payment Method: " + paymentMethod + "\n");
                    orderTextArea.append("Total Amount: " + total_amount + "\n");
                    orderTextArea.append("Amount Paid: " + amount_insert + "\n");
                    orderTextArea.append("Change: " + change + "\n");
                    orderTextArea.append("=============================\n");
                }
            }

            br.close();

            // Create a scroll pane to hold the JTextArea and show it in a dialog
            JScrollPane scrollPane = new JScrollPane(orderTextArea);
            Font fontOrderArea = new Font("Arial", Font.PLAIN, 20);
            orderTextArea.setFont(fontOrderArea);
            JOptionPane.showMessageDialog(null, scrollPane, "Orders", JOptionPane.PLAIN_MESSAGE);
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error reading orders.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_view_order_buttonActionPerformed

    private void report_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_report_comboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_report_comboboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminHomepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit_profile_button;
    private javax.swing.JButton exit_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton modify_drinks_button;
    private javax.swing.JButton report_button;
    private javax.swing.JComboBox<String> report_combobox;
    private javax.swing.JButton view_drinks_button;
    private javax.swing.JButton view_order_button;
    // End of variables declaration//GEN-END:variables
}
